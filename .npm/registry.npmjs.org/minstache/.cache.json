{"_id":"minstache","_rev":"17-aa1ce154563af309fd2f20b1a049778e","name":"minstache","description":"Mini mustache template engine","dist-tags":{"latest":"1.2.0"},"versions":{"0.0.1":{"name":"minstache","version":"0.0.1","description":"Mini mustache template engine","keywords":["mustache","template","engine"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{"commander":"1.0.4"},"devDependencies":{"mocha":"*","should":"*"},"bin":{"minstache":"bin/minstache"},"main":"index","_id":"minstache@0.0.1","dist":{"shasum":"8b53bfc7852f774c003f06f2a998084d90d8c2a7","tarball":"https://registry.npmjs.org/minstache/-/minstache-0.0.1.tgz"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.0.0":{"name":"minstache","version":"1.0.0","description":"Mini mustache template engine","keywords":["mustache","template","engine"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{"commander":"1.0.4"},"devDependencies":{"mocha":"*","should":"*"},"bin":{"minstache":"bin/minstache"},"main":"index","_id":"minstache@1.0.0","dist":{"shasum":"8f57273776872bab865942b71935b03d0891f9bc","tarball":"https://registry.npmjs.org/minstache/-/minstache-1.0.0.tgz"},"_npmVersion":"1.1.65","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.1.0":{"name":"minstache","version":"1.1.0","description":"Mini mustache template engine","keywords":["mustache","template","engine"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{"commander":"1.0.4"},"devDependencies":{"mocha":"*","should":"*"},"bin":{"minstache":"bin/minstache"},"main":"index","_id":"minstache@1.1.0","dist":{"shasum":"5c2e11f4214ea670211a7d6ca3a273ac9bc43730","tarball":"https://registry.npmjs.org/minstache/-/minstache-1.1.0.tgz"},"_from":".","_npmVersion":"1.2.25","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}},"1.2.0":{"name":"minstache","version":"1.2.0","description":"Mini mustache template engine","keywords":["mustache","template","engine"],"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"dependencies":{"commander":"1.0.4"},"devDependencies":{"mocha":"*","should":"*"},"bin":{"minstache":"bin/minstache"},"main":"index","_id":"minstache@1.2.0","dist":{"shasum":"ff1cc403ac2844f68dbf18c662129be7eb0efc41","tarball":"https://registry.npmjs.org/minstache/-/minstache-1.2.0.tgz"},"_from":".","_npmVersion":"1.3.22","_npmUser":{"name":"tjholowaychuk","email":"tj@vision-media.ca"},"maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"directories":{}}},"readme":"\n# minstache\n\n  Mini mustache template engine.\n\n## Installation\n\n    $ npm install minstache\n    $ component install visionmedia/minstache\n\n## minstache(1)\n\n  The `minstache(1)` executable can compile a file to a valid\n  stand-alone commonjs module for you, there's no need to have minstache\n  as a dependency:\n\n  hello.mustache:\n\n```\nHello {{name}}! {{^authenticated}}<a href=\"/login\">login</a>{{/authenticated}}\n```\n\n  convert it:\n\n```\n$ minstache < hello.mustache > hello.js\n```\n\n  hello.js:\n\n```js\nmodule.exports = function anonymous(obj) {\n\n  function escape(html) {\n    return String(html)\n      .replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  };\n\n  function section(obj, prop, negate, str) {\n    var val = obj[prop];\n    if ('function' == typeof val) return val.call(obj, str);\n    if (negate) val = !val;\n    if (val) return str;\n    return '';\n  };\n\n  return \"Hello \" + escape(obj.name) + \"! \" + section(obj, \"authenticated\", true, \"<a href=\\\"/login\\\">login</a>\") + \"\\n\"\n}\n```\n\n## API\n\n### minstache(string, [obj])\n\n  Compile and render the given mustache `string` with optional context `obj`.\n\n### minstache.compile(string)\n\n  Compile the mustache `string` to a stand-alone `Function` accepting a context `obj`.\n\n## Divergence\n\n  Partials are not supported, this lib is meant to be a small template engine solution for stand-alone [component](http://github.com/component) templates. If your template takes \"partials\" then pass other rendered strings to it. If you need a full-blown mustache solution Hogan.js is still great.\n\n  Minstache uses `{{!name}}` for unescaped properties.\n\n## License\n\n  MIT\n","maintainers":[{"name":"tjholowaychuk","email":"tj@vision-media.ca"}],"time":{"modified":"2014-06-18T04:38:48.323Z","created":"2012-09-05T02:05:01.068Z","0.0.1":"2012-09-05T02:05:02.703Z","1.0.0":"2012-11-07T00:29:15.147Z","1.1.0":"2013-07-04T19:15:52.043Z","1.2.0":"2014-06-18T04:38:48.323Z"},"author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"users":{"quocnguyen":true,"tomjamescn":true},"keywords":["mustache","template","engine"],"readmeFilename":"Readme.md","_attachments":{},"_etag":"\"2YYTJ1SA9CDN06OB17ERR47XA\""}